// Generated by Dagger (https://dagger.dev).
package one.gypsy.neatorganizer.presentation.profile.vm;

import dagger.internal.Factory;
import javax.inject.Provider;
import one.gypsy.neatorganizer.domain.interactors.profile.GetPersonProfile;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonProfileViewModel_AssistedFactory_Factory implements Factory<PersonProfileViewModel_AssistedFactory> {
  private final Provider<GetPersonProfile> getPersonProfileUseCaseProvider;

  public PersonProfileViewModel_AssistedFactory_Factory(
      Provider<GetPersonProfile> getPersonProfileUseCaseProvider) {
    this.getPersonProfileUseCaseProvider = getPersonProfileUseCaseProvider;
  }

  @Override
  public PersonProfileViewModel_AssistedFactory get() {
    return new PersonProfileViewModel_AssistedFactory(getPersonProfileUseCaseProvider);
  }

  public static PersonProfileViewModel_AssistedFactory_Factory create(
      Provider<GetPersonProfile> getPersonProfileUseCaseProvider) {
    return new PersonProfileViewModel_AssistedFactory_Factory(getPersonProfileUseCaseProvider);
  }

  public static PersonProfileViewModel_AssistedFactory newInstance(
      Provider<GetPersonProfile> getPersonProfileUseCase) {
    return new PersonProfileViewModel_AssistedFactory(getPersonProfileUseCase);
  }
}
